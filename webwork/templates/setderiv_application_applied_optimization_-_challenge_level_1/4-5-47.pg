## DESCRIPTION
## Calculus
## ENDDESCRIPTION

## Tagged by tda2d

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Optimization - general)
## Date(8/23/07)
## Institution(ASU)
## MLT(Optimization_FenceCost)
## MLTleader(1)
## Level(5)
## MO(1)
## KEYWORDS('derivative' 'extrema' 'optimization','Optimization' 'Maximum' 'Minimum')




########################################
# this file automatically moved
#	from local/Library/Union/setDervOptimization/4-5-47.pg 
#	to setderiv_application_applied_optimization_level_1/4-5-47.pg 
#	on 2023-05-26 12:01:24.489989 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################




########################################
# this file automatically moved
#	from setderiv_application_applied_optimization_level_1/4-5-47.pg 
#	to setderiv_application_applied_optimization_-_challenge_level_1/4-5-47.pg 
#	on 2023-07-01 15:08:39.906823 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "Parser.pl",
  "parserMultiAnswer.pl",
  "PGunion.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

###################################
# Setup

$a = random(200,320,10);
$b = random(3,6,1);
$c = random(12,16,1);

$length = sqrt($a*($b+$c)/(2*$b));
$width = sqrt(2*$b*$a/($b+$c));

$ma = MultiAnswer(Real($length),Real($width))->with(
  singleResult => 1, separator => " x ", tex_separator => '\times',
  checker => sub {
    my $correct = shift; my $student = shift;
    my ($a,$b) = @{$correct}; my ($A,$B) = @{$student};
    return ($a == $A && $b == $B) || ($a == $B && $b == $A);
  }
);

###################################
# Main text

BEGIN_TEXT
A fence is to be built to enclose a rectangular area of $a square
feet.  The fence along three sides is to be made of material that
costs $b dollars per foot, and the material for the fourth side
costs $c dollars per foot.  Find the dimensions of the enclosure
that is most economical to construct.
$PAR
Dimensions: \{$ma->ans_rule(10)\} x \{$ma->ans_rule(10)\}

$PAR

\{ theresahint \}
END_TEXT

BEGIN_HINT
This problem is different from the other area-of-a-rectangle problems in that we're weighting the sides by a cost-per-foot.  

$PAR

The objective function \(\Omega\) is the cost of the fence.  Our first order of business must be to find this function.  Draw a rectangle, label the four sides \(x\) and \(y\).  Now, add the cost-per-foot to each side.  Three cost $b per foot, and one costs $c per foot.  (Note that it doesn't matter which side gets the $c cost -- it's just a re-labeling of the diagram, and the answer to the problem remains unchanged).

$PAR

It's time to incorporate cost.  Think about the cost of each side of the fence.  I'll do one of them.  There's a side with length \(x\) feet and cost $b per foot.  The cost of this side is \($b \times x \) dollars.  Do this for all four sides.

$PAR

Now, add up the cost of all four sides.  Our objective is to minimize this (presumably we don't want to waste money, eh?).  Label this function \(\Omega(x,y)\).

$PAR

Next, note that we have too many variables!  We have both \(x\) and \(y\).  Use the area constraint to substitute away a variable (I'd eliminate \(y\), if I were choosing).  You'll be left with a single-variable objective function \(\Omega(x)\).

$PAR

Finish the problem by finding the critical side length \(x\), and substitute into the objective function to find the minimal cost to complete the project.  Then grab some gloves and a shovel, cuz it's time to build!

END_HINT

###################################
# Answers

$showPartialCorrectAnswers = 1;
ANS($ma->cmp);

###################################

ENDDOCUMENT();        # This should be the last executable line in the problem.
