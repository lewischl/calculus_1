##DESCRIPTION
##  Graphical application of the second derivative test
##ENDDESCRIPTION

##KEYWORDS('applications of derivatives', 'second derivative test', 'graphical')

## DBsubject('Calculus')
## DBchapter('Applications of Derivatives')
## DBsection('Second derivative test')
## Date('')
## Author('silviana amethyst')
## Institution('uwec')

########################################################################



########################################
# this file automatically moved
#	from setFinal_Exam-Team/second_derivative_test_graphical.pg 
#	to setcomprehensive_review_quiz/second_derivative_test_graphical.pg 
#	on 2023-05-26 12:01:24.489989 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################


DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "PGcourse.pl",      # Customization file for the course
   "parserPopUp.pl",
   "PGuwecTikZutils.pl", #Custom TikZ code
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

SRAND($team_exam3_seed);
$setseed = "set.seed($team_exam3_seed); $team_exam3_seed";

# set up the roots of the second derivative
$r1 = random(-2,2,1);
$sep = random(1,3,1);
$r2 = $r1 + $sep;
$r3 = $r2 + 1;



# now the critical points.  i can make these up.
@c = ();
# first crit point is where the double root is, so that the 2nd der test fails.
$c[0] = $r1;
$c[1] = ($r1+$r2)/2;
$c[2] = $r2+0.5;



# set the x limits for plotting
@xlim = ();
$xlim[0] = $r1-1;
$xlim[1] = $r3+1;

# this what they're given
$f_doubleprime = Formula("(x-$r1)^2 * (x-$r2)^2 * (x-$r3)")->reduce;


# critical points of f', found via matlab
@crit_of_f_doubleprime = ();
$crit_of_f_doubleprime[0] = $r1; # was a double root, so yes.
$crit_of_f_doubleprime[1] = $r1/3 + (2*$r2)/3;








$local_min = "local minimum";
$local_max = "local maximum";
$fail_to_classify = "fail to classify";

$options_class = ["choose one", $local_min, $local_max, $fail_to_classify];

$q1 = $f_doubleprime->eval(x=>$c[0]);
if ($q1 > 0){
    $ans1 = $local_min;
}
elsif ($q1==0){
    $ans1 = $fail_to_classify;
}
else{
    $ans1 = $local_max;
}



$q2 = $f_doubleprime->eval(x=>$c[1]);
if ($q2 > 0){
    $ans2 = $local_min;
}
elsif ($q2==0){
    $ans2 = $fail_to_classify;
}
else{
    $ans2 = $local_max;
}



$q3 = $f_doubleprime->eval(x=>$c[2]);
if ($q3 > 0){
    $ans3 = $local_min;
}
elsif ($q3==0){
    $ans3 = $fail_to_classify;
}
else{
    $ans3 = $local_max;
}


$classification1 = PopUp(
  $options_class,
  $ans1);

$classification2 = PopUp(
  $options_class,
  $ans2);
  
$classification3 = PopUp(
  $options_class,
  $ans3);



$not_infl = "does not have an inflection point";
$yes_infl = "has an inflection point";
$options_infl = ["choose one", $yes_infl, $not_infl];


$infl1 = PopUp(
  $options_infl,
  $not_infl);
  
$infl2 = PopUp(
  $options_infl,
  $not_infl);

$infl3 = PopUp(
  $options_infl,
  $yes_infl);





$xtick = 1;


@ylim = ();
$y_val_left = $f_doubleprime->eval(x=>$xlim[0] );
$y_val_right = $f_doubleprime->eval(x=>$xlim[1] );

$ylim[0] = min($y_val_left,$y_val_right)-1;
$ylim[1] = max($y_val_left,$y_val_right)+1;


$ytick = floor( ($ylim[1]-$ylim[0])/10 );

$graph1 = GraphWithTikZ(function => [[$f_doubleprime,dmin => $xlim[0],dmax => $xlim[1],label=>"f''(x)"]],
                        xmin => $xlim[0],xmax => $xlim[1],ymin => $ylim[0],ymax =>$ylim[1],smooth=>'smooth',ytick => $ytick,xtick => $xtick,useLegend=>1);
                        

##############################################################
#
#  Text
#
#

BEGIN_PGML
The second derivative test is a way to classify critical points of a function.  The below graph depicts [`f''(x)`], the *second* derivative of a function [`f`].

>>[@ image(insertGraph($graph1), width => 500, height => 500, tex_size=>400) @]*<<



---


For each point at which [`f''`] is 0, indicate whether [`f`] has an inflection point there.


* At [`x = [$r1]`], the function [`f`] [_]{$infl1}

* At [`x = [$r2]`], the function [`f`] [_]{$infl2}

* At [`x = [$r3]`], the function [`f`] [_]{$infl3}

---

Suppose we know the locations of the critical points to be [`x \in \{ [$c[0]], [$c[1]], [$c[2]]  \}  `].


For each given critical point of [`f`] use the second derivative test to determine whether [`f`] has a local min, a local max, or indicate if the classification test fails.

* At [`x = [$c[0]]`], [`f`] has a [_]{$classification1}

* At [`x = [$c[1]]`], [`f`] has a [_]{$classification2}

* At [`x = [$c[2]]`], [`f`] has a [_]{$classification3}


END_PGML

ENDDOCUMENT();
