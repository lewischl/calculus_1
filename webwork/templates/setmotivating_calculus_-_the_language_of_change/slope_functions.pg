##DESCRIPTION
##  Arithemetic problem: give the value of pi
##ENDDESCRIPTION

##KEYWORDS('rates of change', 'slope', 'slope function')

## DBsubject('calculus')
## DBchapter('rates of change')
## DBsection('rates of change')
## Date('summer 2023')
## Author('silviana amethyst')
## Institution('uwec')

########################################################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "PGcourse.pl",      # Customization file for the course
   "customCSS.pl",
  "PGuwecTikZutils.pl", #Custom TikZ code
  "parserPopUp.pl",   # <--------------------------------------NEEDED FOR DROPDOWN MENUS
  'PGchoicemacros.pl',
);

loadMacros("niceTables.pl");


# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");

$pi = Real("pi");


$a = random(-4,0,1);
$b = $a + random(1,3,0.5);
$c = $b + random(1,3,0.5);

$f = Formula("(x-$a)*(x-$b)*(x-$c)");

$crit1 = 1/3*(-sqrt($a**2-$a*($b+$c) + $b^2 - $b*$c + $c**2) + $a + $b + $c );
$crit2 = 1/3*(sqrt($a**2-$a*($b+$c) + $b^2 - $b*$c + $c**2) + $a + $b + $c );

@pts_for_slope = ($a-0.5, $a, $crit1, ($a+$b)/2, $b, $crit2);
@slopes = ();
for my $i (0..5){
$slopes[$i] = $f->D->eval(x=>$pts_for_slope[$i]);
}


$ymin = min(-10);
$ymax = max(10);

@xlim = ($a - 1, $c + 1);

$ytick = 2;
$xtick = 1;

$graph1 = GraphWithTikZ(function => [   # functions are an array of "Formula" objects.  dmin and dmax set the values for evaluation for plotting.  stay away from infinite discontinuities!!!
                                     [$f,dmin => $xlim[0],dmax => $xlim[1]], 
                                    ],
points => [],
    xmin => $xlim[0],xmax => $xlim[1],ymin =>$ymin,ymax =>$ymax, # axis limits.  these should be computed, as in this example
    smooth=>'smooth', #smooth, not cornery
    ytick => $ytick,xtick => $xtick); # where to mark the axis.  xtick, ytick is the distance between marks.  they do not have to be the same.
   
   
   
   
   
sub classification {
my $d_val = shift(@_);
my $ans = '';
if (abs($dval) < 0.0001){
    $ans = "zero (horizontal)";}
elsif ($dval > 0){
    $ans = "positive";
  }
  else{
  $ans = "negative";
  }
  
return PopUp(
  ["choose one","positive","negative", "zero (horizontal)"],  # options
  $ans);    # correct answer.  must match string in options exactly
}

@class = ();

for my $i (0..5){
$class[$i] = classification( $slopes[$i]);
}


@possible_derivatives = ();
$possible_derivatives[0] = $f->D;
$possible_derivatives[1] = $f->D + 5;
$possible_derivatives[2] = -$f->D;
$possible_derivatives[3] = -$f->D - 5;



# get set up to present the graphs in random order

$k = random(0, 3);

@letter = ("A", "B", "C", "D");

@perm = shuffle(4);

@inv  = invert(@perm);

@letters_perm = @letter[@perm];
@letters_invperm = @letter[@inv];


@graphs = ();
 # loop for graphs
for my $i (0..3){


$graphs[$i] = GraphWithTikZ(function => [   # functions are an array of "Formula" objects.  dmin and dmax set the values for evaluation for plotting.  stay away from infinite discontinuities!!!
                                     [$possible_derivatives[$i],dmin => $xlim[0],dmax => $xlim[1],label=>"$letters_invperm[$i]"],
                                    ],
points => [],
    xmin => $xlim[0],xmax => $xlim[1],ymin =>$ymin,ymax =>$ymax, # axis limits.  these should be computed, as in this example
    smooth=>'smooth', #smooth, not cornery
    ytick => $ytick,xtick => $xtick,useLegend=>1); # where to mark the axis.  xtick, ytick is the distance between marks.  they do not have to be the same.

} # loop for graphs

# actually do the shuffle
@graphs  = @graphs[@perm];



$popup = PopUp([ "?", "A", "B", "C", "D" ], $letter[ $inv[$k] ]);

$size = 300;

$tab = LayoutTable(
    [
        [ image(insertGraph($graphs[0]), width => $size, height => $size), image(insertGraph($graphs[1]), width => $size, height => $size) ],
        [ image(insertGraph($graphs[2]), width => $size, height => $size), image(insertGraph($graphs[3]), width => $size, height => $size) ],
    ],
    texalignment => 'cc'
);


##############################################################
#
#  Text
#
#
    
BEGIN_PGML

[@ openDiv({ "class" => "problemPurpose" }) @]*
Calculus is the language of change, and this means studying relationships between graphs.  One of the most important relationships is between a graph and its slope, because the slope tells us the rate of change.
[@ closeDiv() @]*

---

Consider the following graph of a function [`f`] (I'm not giving you the formula because it's not important).

>>[@ image(insertGraph($graph1), width => 400, height => 400) @]*<<

Imagine that at a point of interest, we replace the graph of [`f`] with a line that closely fits.  We use the slope of this line as the slope of [`f`] at that point.  

[@ openDiv({ "class" => "importantFormula" }) @]*
* If a graph is increasing, its slope is positive
* If a graph is decreasing, its slope is negative
* If a graph is horizontal at a point, its slope is [`0`].
[@ closeDiv() @]*

Indicate whether the graph above has positive slope, negative slope, or slope [`0`] at the following points:



[@
DataTable(
[
    ['slope of \(f\) at \( x = '. $pts_for_slope[0] .'\) is ', $class[0]->menu()],
    ['slope of \(f\) at \( x = '. $pts_for_slope[1] .'\) is ', $class[1]->menu()],
    ['slope of \(f\) at \( x = '. $pts_for_slope[2] .'\) is ', $class[2]->menu()],
    ['slope of \(f\) at \( x = '. $pts_for_slope[3] .'\) is ', $class[3]->menu()],
    ['slope of \(f\) at \( x = '. $pts_for_slope[4] .'\) is ', $class[4]->menu()],
    ['slope of \(f\) at \( x = '. $pts_for_slope[5] .'\) is ', $class[5]->menu()],
],
align => 'l l',
tablecss => "border:solid 1px; border-spacing:50px 5px; border-radius: 5px; border-collapse:separate;"
);
@]***

END_PGML

ANS( $class[0]->cmp() );
ANS( $class[1]->cmp() );
ANS( $class[2]->cmp() );
ANS( $class[3]->cmp() );
ANS( $class[4]->cmp() );
ANS( $class[5]->cmp() );

BEGIN_PGML

---




[@ $tab @]*

Based on the above observations, select the one of the following graphs that could be a "slope function", which tells is the slope of the given function at the corresponding [`x`]-value.  Remember, 
* if the original function is increasing at a point, the slope function should be positive at that same point.
* if the original function is decreasing at a point, the slope function should be negative at that same point.

Candidate [___]{$popup} is the slope function.




END_PGML

ENDDOCUMENT();
