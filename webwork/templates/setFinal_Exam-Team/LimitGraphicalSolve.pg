##DESCRIPTION
##  A graphical limit problem
##ENDDESCRIPTION

##KEYWORDS('limit','infinity')

## DBsubject('Calculus')
## DBchapter('Limits')
## DBsection('Continuity')
## Date('')
## Author('Erich Jauch')
## Institution('UWEC')

########################################################################

DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "parserPopUp.pl",
   "PGuwecTikZutils.pl", #Custom TikZ code
   "PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());

SRAND($team_exam3_seed);
$setseed = "set.seed($team_exam3_seed); $team_exam3_seed";

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");


# make some arrays to hold things
@xlim = ();
@ylim = ();
@ypoint =();
@f = ();


# set up x values of note
$xlim[0] = random(-4,-2,2); # guaranteed negative
$xlim[1] = -1*$xlim[0];   # guaranteed positive
$xlim[2] = $xlim[1]+2;  # shift to the right.  guarantees xlim is sorted increasing.


# y-coordinate
$ylim[0] = random(2,6,2);

# shift off for point
$ypoint[0] = $ylim[0] - 4;

# first two branches give a removable discontinuity at xlim0
$f[0] = Formula("(1/(-1*$xlim[0]*2))*(x-$xlim[0])^2 + $ylim[0]");
$f[1] = Formula("-1/(-1*$xlim[0]*2)*(x-$xlim[0])^2 + $ylim[0]");
$f[2] = Formula("1/(x-$xlim[2])^4"); # gives infinite limit at xlim[2]

# ensure a jump doesn't happen at xlim1
$ypoint[1] = $f[1]->eval(x=>$xlim[1]);
$ypoint[2] = $f[2]->eval(x=>$xlim[1]);

$a = $f[1]->eval(x=>$xlim[1]);
$b = $f[2]->eval(x=>$xlim[1]);

$f[2] = Formula("1/(x-$xlim[2])^4 + $a - $b"); # gives infinite limit at xlim[2]

$ypoint[2] = $f[2]->eval(x=>$xlim[1]);

$dim = abs($xlim[0]) + 10;
$ymax = $dim;
$tick = 2;

# populate answers
@ans = ();
$ans[0] = "inf";
$ans[1] = $ylim[0];
$ans[2] = $ypoint[1];
$ans[3] = "inf";
$ans[4] = "$ypoint[1]";

$graph1 = GraphWithTikZ(function => [[$f[0],dmin => -$dim,dmax => $xlim[0],rightEnd => 'open'],[$f[1],dmin => $xlim[0],dmax => $xlim[1],leftEnd => 'open',rightEnd => 'open'],[$f[2],dmin => $xlim[1], dmax=> $dim, leftEnd =>'open']],
points => [[Point(($xlim[0],$ylim[0])),color=>"white",label=>" "],
           [Point(($xlim[0],$ypoint[0])),label=>" "],
           [Point(($xlim[1],$ypoint[1])),color=>"white",label=>" "],
           [Point(($xlim[1],$ypoint[2])),color=>"white",label=>" "]
          ],
    xmin => -$dim,xmax => $dim,ymin =>-$ymax,ymax =>$ymax,smooth=>'smooth',ytick => $tick,xtick => $tick);

##############################################################
#
#  Text
#
#

BEGIN_PGML
We have a function [`f(x)`] graphed below:

>>[@ image(insertGraph($graph1), width => 400, height => 400) @]*<<

Find the following limits (Enter DNE if the limit does not exist):

(a) [`\displaystyle \lim_{x\rightarrow -\infty}f(x)=`] [_____]{$ans[0]}

(b) [`\displaystyle \lim_{x\rightarrow[$xlim[0]]}f(x)=`] [_____]{$ans[1]}

(c) [`\displaystyle \lim_{x\rightarrow[$xlim[1]]}f(x)=`] [_____]{$ans[2]}

(d) [`\displaystyle \lim_{x\rightarrow[$xlim[2]]}f(x)=`] [_____]{$ans[3]}

(e) [`\displaystyle \lim_{x\rightarrow \infty }f(x)=`] [_____]{$ans[4]}
END_PGML

ENDDOCUMENT();
