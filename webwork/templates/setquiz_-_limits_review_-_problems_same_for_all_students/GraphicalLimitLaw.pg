##DESCRIPTION
##  Graphical Limit Law: Find limits using graphs of functinos
##ENDDESCRIPTION

##KEYWORDS('graphical limits', 'limit')

## DBsubject('Calculus')
## DBchapter('Limits')
## DBsection('Graphical Limits')
## Date('')
## Author('Erich Jauch and Silviana Amethyst')
## Institution('UWEC')

########################################################################



########################################
# this file automatically moved
#	from setExam_1-Team/GraphicalLimitLaw.pg 
#	to setlimits_review_quiz/GraphicalLimitLaw.pg 
#	on 2023-05-26 12:01:24.489989 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################




########################################
# this file automatically moved
#	from setlimits_review_quiz/GraphicalLimitLaw.pg 
#	to setquiz_-_limits_review_-_problems_same_for_all_students/GraphicalLimitLaw.pg 
#	on 2023-07-01 15:08:39.906823 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################


DOCUMENT();

loadMacros(
   "PGstandard.pl",     # Standard macros for PG language
   "MathObjects.pl",
   "PGML.pl",
   #"source.pl",        # allows code to be displayed on certain sites.
   "parserPopUp.pl",
   "PGuwecTikZutils.pl", #Custom TikZ code
   "PGcourse.pl",      # Customization file for the course
);

# Print problem number and point value (weight) for the problem
TEXT(beginproblem());


SRAND($team_exam1_seed);
$setseed = "set.seed($team_exam1_seed); $team_exam1_seed";

# Show which answers are correct and which ones are incorrect
$showPartialCorrectAnswers = 1;

##############################################################
#
#  Setup
#
#
Context("Numeric");


$parameter = random(2,4,1);
$c = $parameter;







@xlim = ();
@ylim = ();
@ypointF =();
@f = ();

$xlim[0] = random(-4,-2,2);
$xlim[1] = -1*$xlim[0];
$xlim[2] = $xlim[1]+2;

$ylim[0] = random(2,6,2);

$ypointF[0] = $ylim[0] - 4;


$f[0] = Formula("(1/(-1*$xlim[0]*2))*(x-$xlim[0])^2 + $ylim[0]");
$f[1] = Formula("-1/(-1*$xlim[0]*2)*(x-$xlim[0])^2 + $ylim[0]");

$ypointF[1] = $f[1]->eval(x=>$xlim[1]);

$ypointF[2] = $ypointF[1] - 2;

if ($ypointF[2]==0) {
$ypointF[2] = -2;
}

$f[2] = Formula("$ypointF[2]*($xlim[1]-$xlim[2])^2/(x-$xlim[2])^2");





@ypointg =();


$g[0] = Formula("(1/(-1*$xlim[0]*2))*(x-$xlim[0])^2 -1");
$g[1] = Formula("2/(-1*$xlim[0]*2)*(x-$xlim[0])^2 -1");

$ypointg[1] = $g[1]->eval(x=>$xlim[1]);


$g[2] = Formula("x + $ypointg[1]");

$ypointg[2] = $g[2]->eval(x=>$xlim[1]);

$dim = abs($xlim[0]) + 10;
$ymax = $dim;
$tick = 2;

$graph1 = GraphWithTikZ(function => [[$f[0],dmin => -$dim,dmax => $xlim[0],rightEnd => 'open',label=>"f(x)"],
                                     [$f[1],dmin => $xlim[0],dmax => $xlim[1],leftEnd => 'open',rightEnd => 'open',useLegend=>0],
                                     [$f[2],dmin => $xlim[1], dmax=> $dim, leftEnd =>'open',useLegend=>0]],
                        points => [[Point(($xlim[0],$ylim[0])),color=>"white",label=>" "],
                                   [Point(($xlim[0],$ypointF[0])),label=>" "],
                                   [Point(($xlim[1],$ypointF[1])),color=>"white",label=>" "],
                                   [Point(($xlim[1],$ypointF[2])),color=>"white",label=>" "]],
                        xmin => -$dim,xmax => $dim,ymin =>-$ymax,ymax =>$ymax,smooth=>'smooth',ytick => $tick,xtick => $tick,useLegend=>1);



$graph2 = GraphWithTikZ(function => [[$g[0],dmin => -$dim,dmax => $xlim[0],label=>"g(x)"],
                                     [$g[1],dmin => $xlim[0],dmax => $xlim[1],rightEnd => 'open',useLegend=>0],
                                     [$g[2],dmin => $xlim[1], dmax=> $dim, leftEnd =>'open',useLegend=>0]],
                        points => [[Point(($xlim[1],$ypointg[1])),color=>"white",label=>" "],
                                   [Point(($xlim[1],$ypointg[2])),color=>"white",label=>" "]],
                        xmin => -$dim,xmax => $dim,ymin =>-$ymax,ymax =>$ymax,smooth=>'smooth',ytick => $tick,xtick => $tick,useLegend=>1,color=>"red");







@ans = ();
$ans[0] = $ypointF[1] + $ypointg[1];
$ans[1] = $ypointF[1] - $ypointg[1];
$ans[2] = $ypointF[1] * $ypointg[1];

##############################################################
#
#  Text
#
# , tex_size=500

BEGIN_PGML

A pair of functions [`f(x)`] and [`g(x)`] are graphed below.  

>>[@ image(insertGraph($graph1), width => 400, height => 400) @]* [@ image(insertGraph($graph2), width => 400, height => 400) @]*<<

---

Find the following limits:

[`` \lim_{x \to [$xlim[1]]^-} (f+g) = ``] [_____]{$ans[0]}

[`` \lim_{x \to [$xlim[1]]^-} (f-g) = ``] [_____]{$ans[1]}

[`` \lim_{x \to [$xlim[1]]^-} (fg) = ``] [_____]{$ans[2]}



END_PGML

ENDDOCUMENT();
