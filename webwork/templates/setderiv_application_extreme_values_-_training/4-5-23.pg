
########################################
# this file automatically moved
#	from local/Library/Union/setDervOptimization/4-5-23.pg 
#	to setderiv_application_extreme_values/4-5-23.pg 
#	on 2023-05-26 12:01:24.489989 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################




########################################
# this file automatically moved
#	from setderiv_application_extreme_values/4-5-23.pg 
#	to setderiv_application_extreme_values_-_training/4-5-23.pg 
#	on 2023-07-01 15:08:39.906823 by silviana amethyst.
# if this problem uses static images, they should also have been moved from that location to here.
# if not, look in the source directory for images that didn't make it.
########################################


DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
  "PGstandard.pl",
  "PGunion.pl",
  "MathObjects.pl",
  "alignedChoice.pl",
  "PGcourse.pl"
);

TEXT(beginproblem());

###################################
# Setup

$at = non_zero_random(-4,4,2);
$a = $at + 5;
$b = 10-$a;
$c0 = random(2,12,1);
$c1 = -3*$a*$b;
$c2 = 3*($b-$a)/2;

$f = Formula("x^3+${c2}x^2+${c1}x+$c0")->reduce;
## Here, f'=3(x+b)(x-a), with roots a and -b=a-10

$p1 = -$b -1;
$p2 = -$b + 2;
$p3 = $a - 1;
$p4 = $a + 1;

$fatnegb=$f->eval(x=>-$b);
$fata=$f->eval(x=>$a);
$fatp1=$f->eval(x=>$p1);
$fatp2=$f->eval(x=>$p2);
$fatp3=$f->eval(x=>$p3);
$fatp4=$f->eval(x=>$p4);

###################################
# Compute the answers

##First interval is [p1,0]##

$ans1 = $fatnegb;
if ($fatp1 <= $c0)
{    $ans2 = $fatp1;  }
else
{    $ans2 = $c0;}

##Second interval is [p2,p4]##
if ($fatp2 < $fatp4)
{    $ans3 = $fatp4;}
else
{    $ans3 = $fatp2;}

$ans4 = $fata;

##Third interval is [p1,p4]##

if ($fatp4 < $fatnegb)
{    $ans5 = $fatnegb;}
else
{    $ans5 = $fatp4;}

if ($fatp1 > $fata)
{    $ans6 = $fata;}
else
{    $ans6 = $fatp1;}

###################################
#  Make aligned lists to present Q and A.
###################################

$a1 = new_aligned_list(ans_rule_len=>25, numbered=>1, tex_spacing=>"3pt", align =>"LEFT");
$a1->qa(
  "Absolute maximum", Real($ans1)->cmp,
  "Absolute minimum", Real($ans2)->cmp,
);

$a2 = new_aligned_list(ans_rule_len=>25, numbered=>1, tex_spacing=>"3pt", align =>"LEFT");
$a2->qa(
  "Absolute maximum", Real($ans3)->cmp,
  "Absolute minimum", Real($ans4)->cmp,
);

$a3 = new_aligned_list(ans_rule_len=>25, numbered=>1, tex_spacing=>"3pt", align =>"LEFT");
$a3->qa(
  "Absolute maximum", Real($ans5)->cmp,
  "Absolute minimum", Real($ans6)->cmp,
);

###################################
# Main text

Context()->texStrings;


BEGIN_PGML

[@ openDiv({ "class" => "problemPurpose" }) @]*
Absolute optima are the max and min values on either the entire domain, or a closed interval of interest.  As we change the interval, different critical points influence the outcome.
[@ closeDiv() @]*

For a video from Prof. Amethyst describing a process for finding the absolute min and max of a function over a closed interval (the topic of this problem), please see the following video.  

* Three examples of absolute optimization start at about 28 minutes in this video (use the chapters to navigate).  
* Conceptual topics precede the examples, with a presentation of the absolute optimization algorithm appearing at about 20 minutes.

>>[@ youtube("45THdDilo4w") @]*<<

[@ openDiv({ "class" => "importantFormula" }) @]*
Absolute optimization requires a continuous function over a closed interval.  Absolute optima will occur at either a critical point, or a boundary point of the interval.  

1. Find all critical points.  
2. Evaluate the function at the critical points *and at the boundary points*.  
3. Find the max and min.
[@ closeDiv() @]*

---

END_PGML


BEGIN_TEXT
Find the absolute maximum and absolute minimum values of the function
\[  f(x) = $f \]
over each of the indicated intervals.
$PAR
Interval = \([$p1, 0]\).
\{$a1->print_q\}
$BR
Interval = \([$p2, $p4]\).
\{$a2->print_q\}
$BR
Interval = \([$p1, $p4]\).
\{$a3->print_q\}


END_TEXT


Context()->normalStrings;

###################################
# Answers

$showPartialCorrectAnswers = 1;

ANS($a1->correct_ans);
ANS($a2->correct_ans);
ANS($a3->correct_ans);

###################################

#$fp=$f->D;

#Context()->texStrings;
#BEGIN_SOLUTION
#$PAR SOLUTION  $PAR
#\[ f'(x) = $fp = 3(x-$a)(x+$b) \]
#The critical numbers are \(x = $a\) and \(x = -$b \).
#$PAR
#(a) Only the critical number \(x = -$b \) is in the interval \([$p1, 0]\).
#The value of the function at this critical number is
#\[ f(-$b) = $fatnegb \]
#The values at the endpoints are 
#\[ f($p1) = $fatp1 \quad \text{and} \quad f(0)=$c0 \]
#Comparing these values we see that: $BR
#$BBOLD 1. $EBOLD   Absolute maximum = \($ans1\) 
#$BR
#$BBOLD 2. $EBOLD Absolute minimum = \($ans2\).
#$PAR  $PAR
#(b) Only the critical number \(x = $a \) is in the interval \([$p2, $p4]\).
#The value of the function at this critical number is
#\[ f($a) = $fata \]
#The values at the endpoints are 
#\[ f($p2) = $fatp2 \quad \text{and} \quad f($p4)=$fatp4 \]
#Comparing these values we see that: $BR
#$BBOLD 1. $EBOLD   Absolute maximum = \($ans3\) 
#$BR
#$BBOLD 2. $EBOLD Absolute minimum = \($ans4\).
#$PAR  $PAR
#(c) Both  critical numbers \(x = -$b\) and \(x = $a \) are in the interval \([$p1, $p4]\).
#The values of the function at these critical numbers are
#\[  f(-$b) = $fatnegb \quad \text{and} \quad f($a) = $fata \]
#The values at the endpoints are 
#\[ f($p1) = $fatp1 \quad \text{and} \quad f($p4)=$fatp4 \]
#Comparing these values we see that: $BR
#$BBOLD 1. $EBOLD   Absolute maximum = \($ans5\) 
#$BR
#$BBOLD 2. $EBOLD Absolute minimum = \($ans6\).
#END_SOLUTION
;
ENDDOCUMENT();
